name: rpm-sccache-release
on:
  workflow_dispatch:
    inputs:
      name:
        type: string
        description: Name of the package to publish
        required: true
      package:
        type: string
        description: Name of the package to publish
        required: true
      release:
        type: string
        description: JSON returned by release-please
        # not required if run manually
        required: false
  workflow_call:
    inputs:
      name:
        type: string
        description: Name of the package to publish
        required: true
      package:
        type: string
        description: Name of the package to publish
        required: true
      release:
        type: string
        description: JSON returned by release-please
        required: true
permissions:
  contents: write
defaults:
  run:
    shell: bash
env:
  NAME: ${{ inputs.name }}
  PACKAGE: ${{ inputs.package }}
jobs:
  release:
    if: ${{ inputs.release == null || fromJSON(inputs.release)[format('rpm/{0}--release_created', inputs.name)] }}
    name: relase ${{ inputs.name }}
    runs-on: ubuntu-24.04
    container:
      image: fedora:41
    steps:
      - name: install dependencies
        run: |
          dnf install -y fedora-packager git make
      - name: setup build environment
        run: rpmdev-setuptree
      - uses: actions/checkout@v4
        with:
          set-safe-directory: true
      # BUG: fixes permission in github actions container
      - name: set safe git directory
        run: |
          git config --system --add safe.directory "$PWD"
      - name: install ${{ inputs.name }} build dependencies
        run: |
          make -C "rpm/$NAME" install-deps
      - name: build ${{ inputs.name }} rpm
        run: |
          make -C "rpm/$NAME" build
          CHANGED="$(git status -u --porcelain)"
          if [[ -n "$CHANGED" ]]; then
            git diff
            echo "file changed"
            exit 1
          fi
      - name: call ${{ inputs.name }} webhook
        env:
          WEBHOOK: ${{ secrets.COPR_WEBHOOK }}
        run: |
          curl -X POST "$WEBHOOK/$PACKAGE"
